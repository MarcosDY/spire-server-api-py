# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from spire.api.server.svid.v1 import svid_pb2 as spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2


class SVIDStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MintX509SVID = channel.unary_unary(
                '/spire.api.server.svid.v1.SVID/MintX509SVID',
                request_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintX509SVIDRequest.SerializeToString,
                response_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintX509SVIDResponse.FromString,
                )
        self.MintJWTSVID = channel.unary_unary(
                '/spire.api.server.svid.v1.SVID/MintJWTSVID',
                request_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintJWTSVIDRequest.SerializeToString,
                response_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintJWTSVIDResponse.FromString,
                )
        self.BatchNewX509SVID = channel.unary_unary(
                '/spire.api.server.svid.v1.SVID/BatchNewX509SVID',
                request_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.BatchNewX509SVIDRequest.SerializeToString,
                response_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.BatchNewX509SVIDResponse.FromString,
                )
        self.NewJWTSVID = channel.unary_unary(
                '/spire.api.server.svid.v1.SVID/NewJWTSVID',
                request_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewJWTSVIDRequest.SerializeToString,
                response_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewJWTSVIDResponse.FromString,
                )
        self.NewDownstreamX509CA = channel.unary_unary(
                '/spire.api.server.svid.v1.SVID/NewDownstreamX509CA',
                request_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewDownstreamX509CARequest.SerializeToString,
                response_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewDownstreamX509CAResponse.FromString,
                )


class SVIDServicer(object):
    """Missing associated documentation comment in .proto file."""

    def MintX509SVID(self, request, context):
        """Mints a one-off X509-SVID outside of the normal node/workload
        registration process.

        The caller must be local or present an admin X509-SVID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MintJWTSVID(self, request, context):
        """Mints a one-off JWT-SVID outside of the normal node/workload
        registration process.

        The caller must be local or present an admin X509-SVID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchNewX509SVID(self, request, context):
        """Creates one or more X509-SVIDs from registration entries.

        The caller must present an active agent X509-SVID that is authorized
        to mint the requested entries. See the Entry GetAuthorizedEntries RPC.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewJWTSVID(self, request, context):
        """Creates an JWT-SVID from a registration entry.

        The caller must present an active agent X509-SVID that is authorized
        to mint the requested entry. See the Entry GetAuthorizedEntries RPC.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewDownstreamX509CA(self, request, context):
        """Creates an X509 CA certificate appropriate for use by a downstream
        entity to mint X509-SVIDs.

        The caller must present a downstream X509-SVID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SVIDServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MintX509SVID': grpc.unary_unary_rpc_method_handler(
                    servicer.MintX509SVID,
                    request_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintX509SVIDRequest.FromString,
                    response_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintX509SVIDResponse.SerializeToString,
            ),
            'MintJWTSVID': grpc.unary_unary_rpc_method_handler(
                    servicer.MintJWTSVID,
                    request_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintJWTSVIDRequest.FromString,
                    response_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintJWTSVIDResponse.SerializeToString,
            ),
            'BatchNewX509SVID': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchNewX509SVID,
                    request_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.BatchNewX509SVIDRequest.FromString,
                    response_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.BatchNewX509SVIDResponse.SerializeToString,
            ),
            'NewJWTSVID': grpc.unary_unary_rpc_method_handler(
                    servicer.NewJWTSVID,
                    request_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewJWTSVIDRequest.FromString,
                    response_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewJWTSVIDResponse.SerializeToString,
            ),
            'NewDownstreamX509CA': grpc.unary_unary_rpc_method_handler(
                    servicer.NewDownstreamX509CA,
                    request_deserializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewDownstreamX509CARequest.FromString,
                    response_serializer=spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewDownstreamX509CAResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'spire.api.server.svid.v1.SVID', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SVID(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def MintX509SVID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spire.api.server.svid.v1.SVID/MintX509SVID',
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintX509SVIDRequest.SerializeToString,
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintX509SVIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MintJWTSVID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spire.api.server.svid.v1.SVID/MintJWTSVID',
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintJWTSVIDRequest.SerializeToString,
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.MintJWTSVIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchNewX509SVID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spire.api.server.svid.v1.SVID/BatchNewX509SVID',
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.BatchNewX509SVIDRequest.SerializeToString,
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.BatchNewX509SVIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewJWTSVID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spire.api.server.svid.v1.SVID/NewJWTSVID',
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewJWTSVIDRequest.SerializeToString,
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewJWTSVIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewDownstreamX509CA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spire.api.server.svid.v1.SVID/NewDownstreamX509CA',
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewDownstreamX509CARequest.SerializeToString,
            spire_dot_api_dot_server_dot_svid_dot_v1_dot_svid__pb2.NewDownstreamX509CAResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
